本工程实现了许多常见的推荐系统的基本功能，针对具体的情况，一些引擎的推荐准确率可能没有那么好，需要根据实际需求进行修改

整体设计的几个功能模块：
main模块：对外接口，包含主要的示例
etl模块：负责将原始数据格式转换成内部所使用的dataframe格式，该部分需要自己手动调整
推荐模块：包含5大类推荐引擎，具体使用方法看main函数里的实例，可以针对矩阵推荐或者针对某个用户推荐
后续处理模块：包括筛选、整合、生成最终推荐等

补充功能：
线上实时计算模块——对接数据库等


#待补充功能
1. 分割、训练、评估
2. 对有评分的数据集的支持（涉及到大量的参数调整）
3. 可视化效果展示
4. 基于多元组的计算方式（包括用户相似度以及基于时间的评分）
#对于评分，还有需要注意每个人或者每件物品打分习惯的计算：与topN明显不同


此处的多引擎指的是思想上的或者业务上的
可以补充的想法是算法上的

#在top10开源项目上寻找一些算法上的引擎

#可选的升级功能
#连接数据库
#修改成线上模式——日志+增量计算


        # 当前文件的路径
        pwd = os.getcwd()
        print(pwd)
        # 当前文件的父路径
        father_path = os.path.abspath(os.path.dirname(pwd) + os.path.sep + ".")
        # 当前文件的前两级目录
        grader_father = os.path.abspath(os.path.dirname(pwd) + os.path.sep + "..")
        print(father_path)
        print(grader_father)



#实际上的多引擎并不单单只是指算法上的多引擎，更多的是指在业务上的：
#比如专门负责冷启动的，专门负责重点广告业务的等，即常见的浏览器中其他文章+广告的模式

#推荐系统核心模块，处理的是特征维度，而不仅仅是简单的行为、矩阵、图
#对单一用户的推荐+推荐理由


#遇到一个特大问题：各部分对于行列的格式不一致，需要调研其相应的etl模块
#但是目前看好像无特大问题，因为dataframe遇到dict会自动将key当做columns
#但是如果是list的话，那么则会按照默认的方法生成dataframe（横index， 纵columns）

#接下来的验证项目
1. random
2. coldstart
3. usercf
4. itemcf
5. 社会信息
6. 时间信息（MostHot，基于时间）
7. 基于社交网络
8. 荣和推荐系统的性能

